<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Peng Blog</title>
  
  <subtitle>学习，生活</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://liupeng.world/"/>
  <updated>2019-02-04T02:35:53.957Z</updated>
  <id>http://liupeng.world/</id>
  
  <author>
    <name>peng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Apache Bench</title>
    <link href="http://liupeng.world/2019/02/03/ApacheBench/"/>
    <id>http://liupeng.world/2019/02/03/ApacheBench/</id>
    <published>2019-02-03T08:43:00.000Z</published>
    <updated>2019-02-04T02:35:53.957Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Apache-Bench简介"><a href="#Apache-Bench简介" class="headerlink" title="Apache Bench简介"></a>Apache Bench简介</h4><p>ApacheBench 是 Apache 服务器自带的一个web压力测试工具，简称ab。ab又是一个命令行工具，对发起负载的本机要求很低，根据ab命令可以创建很多的并发访问线程，模拟多个访问者同时对某一URL地址进行访问，因此可以用来测试目标服务器的负载压力。总的来说ab工具小巧简单，上手学习较快，可以提供需要的基本性能指标，但是没有图形化结果，不能监控。<br><a id="more"></a></p><h4 id="Apache-Bench安装"><a href="#Apache-Bench安装" class="headerlink" title="Apache Bench安装"></a>Apache Bench安装</h4><p>首先需要安装Apache服务器，下载地址：<a href="https://www.apachelounge.com/download/" target="_blank" rel="noopener">https://www.apachelounge.com/download/</a></p><h4 id="Apache-Bench使用"><a href="#Apache-Bench使用" class="headerlink" title="Apache Bench使用"></a>Apache Bench使用</h4><p>了解参数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">参数说明：</span><br><span class="line">格式：ab [options] [http://]hostname[:port]/path</span><br><span class="line"></span><br><span class="line">-n requests Number of requests to perform     //本次测试发起的总请求数</span><br><span class="line">-c concurrency Number of multiple requests to make　　 //一次产生的请求数（或并发数）</span><br><span class="line">-t timelimit Seconds to max. wait for responses　　　　//测试所进行的最大秒数，默认没有时间限制。</span><br><span class="line">-r Don&apos;t exit on socket receive errors.     // 抛出异常继续执行测试任务 </span><br><span class="line">-p postfile File containing data to POST　　//包含了需要POST的数据的文件，文件格式如“p1=1&amp;p2=2”.使用方法是 -p 111.txt</span><br><span class="line"></span><br><span class="line">-T content-type Content-type header for POSTing</span><br><span class="line">//POST数据所使用的Content-type头信息，如 -T “application/x-www-form-urlencoded” 。 （配合-p）</span><br><span class="line">-v verbosity How much troubleshooting info to print</span><br><span class="line">//设置显示信息的详细程度 – 4或更大值会显示头信息， 3或更大值可以显示响应代码(404, 200等), 2或更大值可以显示警告和其他信息。 -V 显示版本号并退出。</span><br><span class="line">-C attribute Add cookie, eg. -C “c1=1234,c2=2,c3=3” (repeatable)</span><br><span class="line">//-C cookie-name=value 对请求附加一个Cookie:行。 其典型形式是name=value的一个参数对。此参数可以重复，用逗号分割。</span><br><span class="line">提示：可以借助session实现原理传递 JSESSIONID参数， 实现保持会话的功能，如-C ” c1=1234,c2=2,c3=3, JSESSIONID=FF056CD16DA9D71CB131C1D56F0319F8″ 。</span><br><span class="line">-w Print out results in HTML tables　　//以HTML表的格式输出结果。默认时，它是白色背景的两列宽度的一张表。</span><br><span class="line">-i Use HEAD instead of GET</span><br><span class="line">-x attributes String to insert as table attributes</span><br><span class="line">-y attributes String to insert as tr attributes</span><br><span class="line">-z attributes String to insert as td or th attributes</span><br><span class="line">-H attribute Add Arbitrary header line, eg. ‘Accept-Encoding: gzip’ Inserted after all normal header lines. (repeatable)</span><br><span class="line">-A attribute Add Basic WWW Authentication, the attributes</span><br><span class="line">are a colon separated username and password.</span><br><span class="line">-P attribute Add Basic Proxy Authentication, the attributes are a colon separated username and password.</span><br><span class="line">-X proxy:port Proxyserver and port number to use</span><br><span class="line">-V Print version number and exit</span><br><span class="line">-k Use HTTP KeepAlive feature</span><br><span class="line">-d Do not show percentiles served table.</span><br><span class="line">-S Do not show confidence estimators and warnings.</span><br><span class="line">-g filename Output collected data to gnuplot format file.</span><br><span class="line">-e filename Output CSV file with percentages served</span><br><span class="line">-h Display usage information (this message)</span><br></pre></td></tr></table></figure></p><p>参数倒是挺多的不过，经常用的就是 -n -c ,记得配置path环境变量哈，不然要去bin目录下执行</p><p>例如:</p><p><img src="/images/ApacheBench详解.jpg" align="center"></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Apache-Bench简介&quot;&gt;&lt;a href=&quot;#Apache-Bench简介&quot; class=&quot;headerlink&quot; title=&quot;Apache Bench简介&quot;&gt;&lt;/a&gt;Apache Bench简介&lt;/h4&gt;&lt;p&gt;ApacheBench 是 Apache 服务器自带的一个web压力测试工具，简称ab。ab又是一个命令行工具，对发起负载的本机要求很低，根据ab命令可以创建很多的并发访问线程，模拟多个访问者同时对某一URL地址进行访问，因此可以用来测试目标服务器的负载压力。总的来说ab工具小巧简单，上手学习较快，可以提供需要的基本性能指标，但是没有图形化结果，不能监控。&lt;br&gt;
    
    </summary>
    
      <category term="工具" scheme="http://liupeng.world/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="ApacheBench" scheme="http://liupeng.world/tags/ApacheBench/"/>
    
  </entry>
  
  <entry>
    <title>开篇博客</title>
    <link href="http://liupeng.world/2019/02/03/%E5%BC%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>http://liupeng.world/2019/02/03/开篇博客/</id>
    <published>2019-02-03T01:23:00.000Z</published>
    <updated>2019-02-04T02:36:31.178Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/kaipt.jpg" alt=""></p><p>开个博客，写写东西。<br><a id="more"></a><br>很早之间我就想做个博客，写一些技术文档，随笔，却一直没有沉下心来做这件事。</p><p>最近过年才有时间，大概花了1天时间搭建Hexo比想象中的简单多了，之前一直觉得挺麻烦的，也许是因为知识的积累和想拥有一个自己博客的迫切希望才促使我不断的去突破困难搭建完善。</p><p>搭建博客虽然简单，但是持之以恒的去写文章就很难了。我现在开篇立个flag，一周至少更新一篇技术博客，大家监督~</p><p>我一直认为啊~技术宅真的是可以拯救世界的，大家一起加油吧！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/kaipt.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;开个博客，写写东西。&lt;br&gt;
    
    </summary>
    
      <category term="生活" scheme="http://liupeng.world/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
</feed>
